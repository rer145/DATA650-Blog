library(tidytext
library(tidytext)
library(tidytext)
unique(sentiments$lexicon)
get_sentiments('bing')
library(gutenbergr)
bing<-get_sentiments('bing') #positive/negative
View(bing)
library(dplyr)
dracula<-gutenberg_download(345)
words<-dracula%>%
unnest_tokens(word, text)
inner_join(words, bing)
sent<-inner_join(words, bing)
View(sent)
sent%>%
group_by(sentiment)%>%
summarize(count=n())
sent$gutenberg_id<-NULL
View(sent)
sent%>%
group_by(sentiment)%>%
summarize(count=n())
sent$score<-1
which(sent$sentiment=='negative')
sent$sentiment[negrows]
negrows<-which(sent$sentiment=='negative')
sent$sentiment[negrows]
sent$sentiment[negrows]<--1
View(sent)
dracula<-gutenberg_download(345)
words<-dracula%>%
unnest_tokens(word, text)
sent<-inner_join(words, bing)
sent$gutenberg_id<-NULL #drops id column
sent$score<-1
negrows<-which(sent$sentiment=='negative')
sent$sentiment[negrows]
sent$score[negrows]<--1
View(sent)
dim(sent)
dim(sent[0])
install.packages("sparklyr")
library(sparklyr)
sc<-spark_connect(master="192.168.1.130")
install.packages("nycflights13")
library(nycflights13)
library(Lahman)
sc<-spark_connect(master="192.168.1.130")
library(dplyr)
sc<-spark_connect(master="192.168.1.130")
sc<-spark_connect(master="192.168.1.130")
sc<-spark_connect(master="spark://192.168.1.130")
sc<-spark_connect(master="spark://192.168.1.130", spark_home='c:\\spark-home')
sc<-spark_connect(master="spark://192.168.1.130", spark_home='c:\\spark-home', version='2.2.0')
library(dplyr)
library(sparklyr)
library(nycflights13)
library(Lahman)
sc<-spark_connect(master="spark://192.168.1.130", spark_home='/home/ron/.local/lib/python2.7/site-packages/pyspark', version='2.2.0')
sc<-spark_connect(master="spark://192.168.1.130", spark_home='c:\\tmp', version='2.2.0')
spark_install(version='2.2.0')
sc<-spark_connect(master="spark://192.168.1.130", spark_home='c:\\tmp', version='2.2.0')
sc<-spark_connect(master="spark://192.168.1.130:42301", spark_home='c:\\tmp', version='2.2.0')
spark_installed_versions()
spark_home_dir()
sc<-spark_connect(master="spark://192.168.1.130:42301")
sc<-spark_connect(master="spark://192.168.1.130:42301", spark_home='C:\\Users\\ronri\\AppData\\Local\\spark\\spark-2.2.0-bin-hadoop2.7')
sc<-spark_connect(master="local")
tbl_flights<-copy_to(sc, nycflights13::flights, "flights")
tbl_batting<-copy_to(sc, Lahman::Batting, "batting")
sc<-spark_connect(master="local")
setwd("C:/Users/ronri/OneDrive/Mercyhurst/DATA 650 - Comm & Collab DS/blog")
blogdown:::new_post_addin()
?comparison
??comparison.cloud
?acast
??acast
blogdown:::new_post_addin()
blogdown:::serve_site()
library(gutenbergr)
library(tidytext)
library(dplyr)
library(wordcloud2)
dracula<-gutenberg_download(345)
dracula$gutenberg_id<-NULL
dracula<-dracula%>%
unnest_tokens(word, text)
bing<-get_sentiments('bing')
dracula<-inner_join(dracula, bing)
words<-dracula%>%
group_by(word)%>%
summarize(count=n())%>%
arrange(count)
# Triangle shaped wordcloud
wordcloud2(words, shape='triangle', backgroundColor='black')
library(gutenbergr)
library(tidytext)
library(dplyr)
dracula<-gutenberg_download(345)
dracula$gutenberg_id<-NULL
dracula<-dracula%>%
unnest_tokens(word, text)
bing<-get_sentiments('bing')
dracula<-inner_join(dracula, bing)
words<-dracula%>%
group_by(word)%>%
summarize(count=n(), sentiment=first(sentiment))%>%
arrange(count)
# A normal wordcloud plot
wordcloud(words$word, words$count, max.words=150)
# Reshaping our data to a matrix with reshape2
library(reshape2)
matrix<-acast(words, word~sentiment, value.var='count', fill=0)
# The comparison cloud
comparison.cloud(matrix, colors=c('black', 'orange'))
library(gutenbergr)
library(tidytext)
library(dplyr)
library(wordcloud)
dracula<-gutenberg_download(345)
dracula$gutenberg_id<-NULL
dracula<-dracula%>%
unnest_tokens(word, text)
bing<-get_sentiments('bing')
dracula<-inner_join(dracula, bing)
words<-dracula%>%
group_by(word)%>%
summarize(count=n(), sentiment=first(sentiment))%>%
arrange(count)
# A normal wordcloud plot
wordcloud(words$word, words$count, max.words=150)
# Reshaping our data to a matrix with reshape2
library(reshape2)
matrix<-acast(words, word~sentiment, value.var='count', fill=0)
# The comparison cloud
comparison.cloud(matrix, colors=c('black', 'orange'))
blogdown:::serve_site()
